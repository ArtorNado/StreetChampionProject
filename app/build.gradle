apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "io.gitlab.arturbosch.detekt"

android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.example.streetchampionproject"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'API_ENDPOINT', baseUrl
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$rootDir/config/detekt/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
// baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = false // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = false // similar to the console output, contains issue signature to manually edit baseline files
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha05'
    implementation "com.google.dagger:dagger:2.25.2"
    implementation "com.google.dagger:dagger-android-support:2.21"
    implementation "com.google.firebase:firebase-core:17.2.3"
    implementation "com.google.firebase:firebase-auth:19.3.0"
    implementation "com.google.firebase:firebase-database:19.2.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.2.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.2.1"
    implementation "com.squareup.retrofit2:converter-gson:2.6.4"
    implementation "com.squareup.retrofit2:retrofit:2.6.4"
    implementation "com.squareup.retrofit2:converter-gson:2.6.4"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.8'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'com.github.zjywill:OverwatchProgress:1.6'
    kapt "com.google.dagger:dagger-android-processor:2.21"
    kapt "com.google.dagger:dagger-compiler:2.21"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

apply plugin: 'com.google.gms.google-services'
